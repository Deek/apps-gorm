
8th December 1999

This is Gorm version 0.0 ... a very pre-pre-alpha release.

I'm away from home until the 13th of December, so my aim in placing this
code in the CVS repository is to let people have a look over the next few
days and let me know if I'm heading in the wrong direction.  After all,
this is the very first OpenStep gui app I've written ...

Please note - to build this code you will need the latest library source
from the CVS repository, and it may be that you also need to be using the
xgps backend rather than xdps (I don't have xdps running to test it on).


Gorm is an acronym for Graphic Object Relationship modeler (or perhaps
GNUstep Object Relationship Modeler).

Gorm is a clone of the NeXTstep 'Interface Builder' application for GNUstep.

Gorm is not 'gormless' (a Yorkshire dialect word that my parents used when they
spotted me staring, slack-jawed, at the TV).


My aim in writing this is to get a usable IB clone working before the new
millenium,  so there is not much time left.

By 'usable' I mean that, at least for simple user interfaces, it should be
possible to create/edit/test archived representations of an interface more
easily using Gorm than by coding by hand.

This initial version of the software doesn't come close to that goal - so
don't go expecting very much.

Current state -

Save/Load 'nib' documents (binary archived data)
  This works so far as it can be tested - but that's just archives containing
  windows or panels so far.

Load palettes
  Loading of palettes works.  You can load palettes from the 'Tools' menu.
  Gorm automatically loads all the palettes from its Resources directory.

Basic framework
  So far, the app provides a basic framework that needs fleshing out.

  It has a palettes manager object that allows you to select a palette and
  drag items from the palette into your document.

  It has a special per-document editor object, which keeps track of a matrix
  of icons representing the top-level objects in the document.

  It has an inspector manager class, which updates the inspector panel
  when the selected object is changed by an editor.

  It has special inspectors for handling an empty selection or a multiple
  selection.

 Palettes
 
  Four palettes (three of which are empty at present) are built and installed
  in the apps Resources directory.

  The Window palette is more fully fleshed out than the other palettes.
  It permits windows and panels to be created in Gorm.
  If provides the start of a window attributes inspector.

